{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data-form/data-form.component.ts","./src/app/data-form/data-form.component.html","./src/app/data-form/data-form.module.ts","./src/app/shared/base-form/base-form.component.ts","./src/app/shared/campo-control-erro/campo-control-erro.component.ts","./src/app/shared/campo-control-erro/campo-control-erro.component.html","./src/app/shared/input-field/input-field.component.ts","./src/app/shared/services/dropdown.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { DataFormComponent } from \"./data-form/data-form.component\";\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"dataForm\", component: DataFormComponent },\r\n  { path: \"\", pathMatch: \"full\", redirectTo: \"dataForm\" },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  title = \"app works!\";\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <span>Onde posso encontrar Churros?</span>\r\n</mat-toolbar>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { DataFormModule } from \"./data-form/data-form.module\";\r\n\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    DataFormModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\";\r\nimport { EstadoBr } from \"./../shared/models/estado-br.model\";\r\nimport { DropdownService } from \"./../shared/services/dropdown.service\";\r\n\r\nimport { empty } from \"rxjs\";\r\n\r\nimport { map, tap, switchMap } from \"rxjs/operators\";\r\nimport { BaseFormComponent } from \"../shared/base-form/base-form.component\";\r\nimport { Cidade } from \"../shared/models/cidade\";\r\n\r\ninterface PontoVenda {\r\n  nome: string;\r\n  estado: string;\r\n  cidade: string;\r\n  pVenda: string;\r\n  horarioComeca: string;\r\n  horarioTermina: string;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-data-form\",\r\n  templateUrl: \"./data-form.component.html\",\r\n  styleUrls: [\"./data-form.component.css\"],\r\n})\r\nexport class DataFormComponent extends BaseFormComponent implements OnInit {\r\n  estados: EstadoBr[];\r\n  cidades: Cidade[];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n\r\n    private dropdownService: DropdownService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dropdownService\r\n      .getEstadosBr()\r\n      .subscribe((dados) => (this.estados = dados));\r\n\r\n    this.formulario = this.formBuilder.group({\r\n      endereco: this.formBuilder.group({\r\n        numero: [null, Validators.required],\r\n        complemento: [null],\r\n        rua: [null, Validators.required],\r\n        bairro: [null, Validators.required],\r\n        cidade: [null, Validators.required],\r\n        estado: [null, Validators.required],\r\n      }),\r\n    });\r\n\r\n    this.formulario\r\n      .get(\"endereco.estado\")\r\n      .valueChanges.pipe(\r\n        tap((estado) => console.log(\"Novo estado: \", estado)),\r\n        map((estado) => this.estados.filter((e) => e.sigla === estado)),\r\n        map((estados) =>\r\n          estados && estados.length > 0 ? estados[0].id : empty()\r\n        ),\r\n        switchMap((estadoId: number) =>\r\n          this.dropdownService.getCidades(estadoId)\r\n        ),\r\n        tap(console.log)\r\n      )\r\n      .subscribe((cidades) => (this.cidades = cidades));\r\n  }\r\n\r\n  submit() {}\r\n\r\n  public pontoVenda!: PontoVenda;\r\n\r\n  public pv: PontoVenda[] = [];\r\n\r\n  cadastrar(\r\n    nome: string,\r\n    estado: string,\r\n    cidade: string,\r\n    pVenda: string,\r\n    horarioComeca: string,\r\n    horarioTermina: string\r\n  ) {\r\n    this.pontoVenda = {\r\n      nome: nome,\r\n      estado: estado,\r\n      cidade: cidade,\r\n      pVenda: pVenda,\r\n      horarioComeca: horarioComeca,\r\n      horarioTermina: horarioTermina,\r\n    };\r\n    this.pv.push(this.pontoVenda);\r\n  }\r\n}\r\n","<mat-list>\r\n  <h2>Pontos de venda cadastrados</h2>\r\n  <ul>\r\n    <li *ngFor=\"let ponto of pv\">{{ ponto | json }}</li>\r\n  </ul>\r\n  <mat-divider></mat-divider>\r\n</mat-list>\r\n\r\n<form [formGroup]=\"formulario\" (ngSubmit)=\"onSubmit()\">\r\n  <div formGroupName=\"endereco\">\r\n    <h2>Cadastre um novo ponto de venda</h2>\r\n    <div>\r\n      <mat-form-field\r\n        class=\"input-formulario\"\r\n        appearance=\"fill\"\r\n        formGroupName=\"endereco\"\r\n      >\r\n        <mat-label for=\"numero\">Nome</mat-label>\r\n        <input\r\n          matInput\r\n          required=\"true\"\r\n          #nome\r\n          type=\"text\"\r\n          id=\"numero\"\r\n          formControlName=\"numero\"\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"fill\" class=\"input-formulario\">\r\n        <mat-label for=\"estado\">Estado</mat-label>\r\n        <select\r\n          matNativeControl\r\n          required=\"true\"\r\n          #estado\r\n          id=\"estado\"\r\n          formControlName=\"estado\"\r\n        >\r\n          <option *ngFor=\"let estado of estados\" [value]=\"estado.sigla\">\r\n            {{ estado.nome }}\r\n          </option>\r\n        </select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"fill\" class=\"input-formulario\">\r\n        <mat-label for=\"cidade\">Cidade</mat-label>\r\n        <select\r\n          matNativeControl\r\n          required=\"true\"\r\n          #cidade\r\n          id=\"cidade\"\r\n          formControlName=\"cidade\"\r\n        >\r\n          <option *ngFor=\"let cidade of cidades\" [value]=\"cidade.nome\">\r\n            {{ cidade.nome }}\r\n          </option>\r\n        </select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"fill\" class=\"input-formulario\">\r\n        <mat-label>Ponto de venda</mat-label>\r\n        <input matInput required=\"true\" #pVenda />\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\" class=\"input-formulario\">\r\n        <mat-label>Começa às</mat-label>\r\n        <input type=\"time\" matInput required=\"true\" #horarioComeca />\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\" class=\"input-formulario\">\r\n        <mat-label>Termina às</mat-label>\r\n        <input type=\"time\" matInput required=\"true\" #horarioTermina />\r\n      </mat-form-field>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"\r\n          cadastrar(\r\n            nome.value,\r\n            estado.value,\r\n            cidade.value,\r\n            pVenda.value,\r\n            horarioComeca.value,\r\n            horarioTermina.value\r\n          )\r\n        \"\r\n      >\r\n        Cadastrar\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { SharedModule } from \"./../shared/shared.module\";\r\nimport { DataFormComponent } from \"./data-form.component\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatSliderModule } from \"@angular/material/slider\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n  ],\r\n  declarations: [DataFormComponent],\r\n})\r\nexport class DataFormModule {}\r\n","import { Component, OnInit, Directive } from \"@angular/core\";\r\nimport { FormGroup, FormArray } from \"@angular/forms\";\r\n\r\n@Directive()\r\nexport abstract class BaseFormComponent implements OnInit {\r\n  formulario: FormGroup;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  abstract submit();\r\n\r\n  onSubmit() {\r\n    if (this.formulario.valid) {\r\n      this.submit();\r\n    } else {\r\n      console.log(\"formulario invalido\");\r\n      this.verificaValidacoesForm(this.formulario);\r\n    }\r\n  }\r\n\r\n  verificaValidacoesForm(formGroup: FormGroup | FormArray) {\r\n    Object.keys(formGroup.controls).forEach((campo) => {\r\n      console.log(campo);\r\n      const controle = formGroup.get(campo);\r\n      controle.markAsDirty();\r\n      controle.markAsTouched();\r\n      if (controle instanceof FormGroup || controle instanceof FormArray) {\r\n        this.verificaValidacoesForm(controle);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-campo-control-erro',\r\n  templateUrl: './campo-control-erro.component.html',\r\n  styleUrls: ['./campo-control-erro.component.css']\r\n})\r\nexport class CampoControlErroComponent implements OnInit {\r\n\r\n  @Input() msgErro: string;\r\n  @Input() mostrarErro: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"mostrarErro\" >\r\n  <span class=\"glyphicon glyphicon-remove form-control-feedback\"></span>\r\n  <span class=\"sr-only\">(error)</span>\r\n  <div class=\"alert alert-danger errorDiv\" role=\"alert\">\r\n    {{ msgErro }}\r\n  </div>\r\n</div>","import { Component, Input, forwardRef } from \"@angular/core\";\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\n\r\nconst INPUT_FIELD_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => InputFieldComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  selector: \"app-input-field\",\r\n  templateUrl: \"./input-field.component.html\",\r\n  styleUrls: [\"./input-field.component.css\"],\r\n  providers: [INPUT_FIELD_VALUE_ACCESSOR],\r\n})\r\nexport class InputFieldComponent implements ControlValueAccessor {\r\n  @Input() classeCss;\r\n  @Input() id: string;\r\n  @Input() label: string;\r\n  @Input() type = \"text\";\r\n  @Input() control;\r\n  @Input() isReadOnly = false;\r\n\r\n  private innerValue: any;\r\n\r\n  get value() {\r\n    return this.innerValue;\r\n  }\r\n\r\n  set value(v: any) {\r\n    if (v !== this.innerValue) {\r\n      this.innerValue = v;\r\n      this.onChangeCb(v);\r\n    }\r\n  }\r\n\r\n  onChangeCb: (_: any) => void = () => {};\r\n  onTouchedCb: (_: any) => void = () => {};\r\n\r\n  writeValue(v: any): void {\r\n    this.value = v;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeCb = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedCb = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.isReadOnly = isDisabled;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { EstadoBr } from \"./../models/estado-br.model\";\r\nimport { Cidade } from \"../models/cidade\";\r\nimport { map } from \"../../../../node_modules/rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class DropdownService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getEstadosBr() {\r\n    return this.http.get<EstadoBr[]>(\"assets/dados/estadosbr.json\");\r\n  }\r\n\r\n  getCidades(idEstado: number) {\r\n    return this.http\r\n      .get<Cidade[]>(\"assets/dados/cidades.json\")\r\n      .pipe(\r\n        map((cidades: Cidade[]) => cidades.filter((c) => c.estado == idEstado))\r\n      );\r\n  }\r\n}\r\n","import { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { DropdownService } from \"./services/dropdown.service\";\r\nimport { CampoControlErroComponent } from \"./campo-control-erro/campo-control-erro.component\";\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { InputFieldComponent } from \"./input-field/input-field.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule, FormsModule, ReactiveFormsModule],\r\n  declarations: [CampoControlErroComponent, InputFieldComponent],\r\n  exports: [CampoControlErroComponent, InputFieldComponent],\r\n  providers: [DropdownService],\r\n})\r\nexport class SharedModule {}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":"webpack:///"}